<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>VideoChatEmoji</title>
    <link rel="stylesheet" href="style.css" />

  </head>
  <body>
    <div class="header">
      <div class="logo">
        <div class="header__back">
          <i class="fas fa-angle-left"></i>
        </div>
        <h3>Video Chat Emoji</h3>
      </div>
    </div>
    <div class="main">
      <div class="main__left">
        <div class="videos__group">
        <div><img id="emoticon-image"> </div>
        <div id="video-grid" class="video-grid"></div>
             </div>

      <div class="options">
        <div class="options__left">
          <div id="stopVideo" class="options__button">
            <i class="fa fa-video-camera"></i>
          </div>
          <div id="muteButton" class="options__button">
            <i class="fa fa-microphone"></i>
          </div>
          <div id="showChat" class="options__button">
            <i class="fa fa-comment"></i>
          </div>
        </div>
        <div class="options__right">
          <div id="inviteButton" class="options__button">
            <i class="fas fa-user-plus"></i>
          </div>
        </div>
      </div>
    </div>
    <div class="main__right">
      <div class="main__chat_window">
          <div class="messages">

          </div>
      </div>
      <div class="main__message_container">
        <input id="chat_message" type="text" autocomplete="off" placeholder="Type message here...">
        <div id="send" class="options__button">
          <i class="fa fa-plus" aria-hidden="true"></i>
        </div>
      </div>
    </div>
  </div>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://kit.fontawesome.com/c939d0e917.js"></script>
  <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
  <script>
    const ROOM_ID = "<%= roomId %>";
  </script>
  <script>

function renderMessages() {
  const messageContainer = document.getElementById('message-container');
  messageContainer.innerHTML = '';

  messages.forEach((message) => {
    const messageElement = document.createElement('div');
    messageElement.classList.add('message');

    const contentElement = document.createElement('div');
    contentElement.classList.add('content');
    contentElement.textContent = message.content;

    const timeElement = document.createElement('div');
    timeElement.classList.add('time');
    timeElement.textContent = message.time;

    if (message.sender === 'user') {
      messageElement.classList.add('user-message');
      messageElement.appendChild(contentElement);
      messageElement.appendChild(timeElement);
    } else {
      const emoticonElement = document.createElement('div');
      emoticonElement.classList.add('emoticon');
      emoticonElement.textContent = 'ðŸ˜Š';

      const messageWrapper = document.createElement('div');
      messageWrapper.classList.add('assistant-message');
      messageWrapper.appendChild(emoticonElement);
      messageWrapper.appendChild(contentElement);
      messageWrapper.appendChild(timeElement);

      messageElement.appendChild(messageWrapper);
    }

    messageContainer.appendChild(messageElement);
  });
}

// Chiamare questa funzione per renderizzare i messaggi
renderMessages();
</script>
  </body>
  <script src="script.js"></script>
</html>
